#!/bin/bash
# shellcheck disable=SC2068

<<comment
  $0 脚本⽂文件名
  $* 所有的参数
  $@ 所有的参数
  $# 参数的个数
  $$ 当前进程的 PID
  $! 上⼀一个后台进程的 PID
  $? 上⼀一个命令的返回值 0 表示成功

  $?：上一条命令执行后返回的状态，当返回状态值为0时表示执行正常，非0值表示执行异常或出错
  $$：当前所在进程的进程号     echo $$   eg：kill -9 $(echo $$)  = exit   退出当前会话
  $!：后台运行的最后一个进程号  （当前终端）  # gedit &
  !!	调用最后一条命令历史

  $#：脚本后面接的参数的个数
  $*：脚本后面所有参数，参数当成一个整体输出，每一个变量参数之间以空格隔开
  $@: 脚本后面所有参数，参数是独立的，也是全部输出

  $0：当前执行的进程/程序名  echo $0
  $1~$9 位置参数变量
  ${10}~${n} 扩展位置参数变量  第10个位置变量必须用{}大括号括起来

comment

echo "第3个位置参数是$3"
echo "第2个位置参数是$2"
echo "第1个位置参数是$1"
echo "所有参数是:$*"
echo "所有参数是:$@"
echo " 参数的个数是:$#"
echo "当前进程的PID是:$$"
echo '$4='$4
echo '$5='$5
echo '$6='$6
echo '$*='$*
echo '$@='$@
echo '$#='$#
echo '$$='$$

echo '----------$@------------'

# 了解$*和$@的区别：
# $*	:表示将变量看成一个整体
# $@	:表示变量是独立的

# 支持这种参数：1 2 3 4 "5 5"
for i in "$@"; do
  echo $i
done

# 不支持这种参数：1 2 3 4 "5 5"
for i in $@; do
  echo $i
done

echo '----------$*------------'

# 当做一个参数
for i in "$*"
do
  echo $i
done

# 和$@的效果一样，所以说直接使用"$@"就行
for i in $*
do
  echo $i
done